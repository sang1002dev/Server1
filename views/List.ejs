<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ListSP</title>
    <!-- Latest Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Latest Bootstrap 5 JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Latest jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>


    <style>
        body {
            background-image: url('https://images.pexels.com/photos/8532776/pexels-photo-8532776.jpeg?auto=compress&cs=tinysrgb&w=600');
            /* Đường dẫn đến tệp hình ảnh nền */
            background-size: cover;
            /* Kích thước ảnh nền sẽ được thay đổi để nắm vừa kích thước của trình duyệt */
            background-repeat: no-repeat;
            /* Ngăn lặp lại hình ảnh nền */
        }

        .text {
            text-align: center;
        }

        .right-align {
            display: flex;
            justify-content: flex-end;
        }

        table {
            width: 100%;
            text-align: center;
        }

        /* Căn chỉnh giá trị */
        td {
            vertical-align: middle;
        }

        /* Căn giữa nút trong cột cuối cùng */
        td:last-child {
            text-align: center;
        }
    </style>
</head>

<body>
    <!-- Trang List.ejs -->
    <div class="container mt-3">
        <h2 class="text">Danh sách sản phẩm</h2>
        <div class="timkiem">
            <input type="text" class="form-control" id="timkiem" placeholder="Tìm kiếm" name="timkiem">
        </div>
        <h5 style="color: orange; margin-top: 10px;">Các sản phẩm mới nhất của cửa hàng: </h5>
        <form action="/insert" class="was-validated right-align">
            <button style="background-color: gray;" type="submit" class="btn btn-primary">Thêm sản phẩm</button>
        </form>
        <table class="table">
            <thead>
                <tr>
                    <th>Ảnh sản phẩm</th>
                    <th>Tên sản phẩm</th>
                    <th>Giá sản phẩm</th>
                    <th>Hãng sản phẩm</th>
                    <th>Tùy chọn</th>
                </tr>
            </thead>

            <tbody>
                <% products.forEach(product=> { %>
                    <tr data-product-id="<%= product._id %>" data-product-name="<%= product.name %>"
                        data-product-price="<%= product.price %>" data-product-brand="<%= product.brand %>"
                        data-product-image-paths="<%= JSON.stringify(product.imagePaths) %>"
                        onclick="openDetailModal('<%= product._id %>', '<%= product.name %>', '<%= product.price %>', '<%= product.brand %>', '<%= JSON.stringify(product.imagePaths) %>')">
                        <td>
                            <% if (product.imagePaths && product.imagePaths.length> 0) { %>
                                <% product.imagePaths.forEach(imagePath=> { %>
                                    <img src="/uploads/<%= imagePath %>" alt="<%= product.name %>" width="60"
                                        height="60">
                                    <% }); %>
                                        <% } else { %>
                                            <!-- Xử lý trường hợp không có hình ảnh -->
                                            <span>No images available</span>
                                            <% } %>
                        </td>


                        <td>
                            <%= product.name %>
                        </td>
                        <td>
                            <%= product.price %>$
                        </td>
                        <td>
                            <%= product.brand %>
                        </td>
                        <td>
                            <button style="background-color: gainsboro;" class="btn btn-primary" data-bs-toggle="modal"
                                data-bs-target="#editProductModal"
                                onclick="openEditModal('<%= product._id %>', '<%= product.name %>', '<%= product.price %>', '<%= product.brand %>', '<%= JSON.stringify(product.imagePaths) %>')">Edit
                            </button>

                            <button style="background-color: gainsboro;" type="button" class="btn btn-danger"
                                onclick="openDeleteModal('<%= product._id %>')">Delete</button>
                        </td>
                    </tr>
                    <% }); %>
            </tbody>

        </table>
    </div>

    <!-- Modal Chi Tiết Sản Phẩm -->
    <div class="modal fade" id="detailProductModal" tabindex="-1" role="dialog"
        aria-labelledby="detailProductModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailProductModalLabel">Chi Tiết Sản Phẩm</h5>
                </div>
                <div class="modal-body">
                    <!-- Các trường thông tin sản phẩm -->
                    <!-- Thêm input ẩn để lưu id của sản phẩm -->
                    <input type="hidden" id="detailProductId">
                    <div class="form-group">
                        <label for="detailProductImage">Ảnh Sản Phẩm</label>
                        <div style="text-align: center;">
                            <img id="detailProductImage" src="" alt="Product Image" width="150" height="150">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="detailProductName">Tên Sản Phẩm</label>
                        <input type="text" class="form-control" id="detailProductName" readonly>
                    </div>
                    <div class="form-group">
                        <label for="detailProductPrice">Giá Sản Phẩm</label>
                        <input type="text" class="form-control" id="detailProductPrice" readonly>
                    </div>
                    <div class="form-group">
                        <label for="detailProductBrand">Hãng Sản Phẩm</label>
                        <input type="text" class="form-control" id="detailProductBrand" readonly>
                    </div>
                    <!-- Danh sách đánh giá -->
                    <div class="mt-3">
                        <h5>Đánh giá:</h5>
                        <ul id="commentList"></ul>
                    </div>
                    <!--bình luận -->
                    <div class="form-group1 mx-3 mt-3">
                        <input type="text" class="form-control" id="user" placeholder="Tên">
                        <div class="input-group">
                            <input type="text" class="form-control" id="comment" placeholder="Bình luận">
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="button" onclick="saveComment()">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Product Modal -->
    <div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProductModalLabel">Chỉnh sửa sản phẩm</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Form for editing product details -->
                    <form>
                        <!-- Thêm input ẩn để lưu id của sản phẩm -->
                        <input type="hidden" id="editProductId">

                        <div class="form-group">
                            <label for="editProductImage">Ảnh sản phẩm</label>

                            <!-- Hiển thị hình ảnh ở giữa kích thước 60x60 -->
                            <div style="text-align: center;">
                                <img id="editProductImagePreview" src="" alt="Product Image" width="100" height="100"
                                    style="border: 1px solid #ccc; padding: 5px;">
                            </div>

                            <!-- Input cho việc chọn tệp hình ảnh mới -->
                            <input type="file" accept="image/*" class="form-control" id="editProductImage"
                                onchange="previewImage()">
                        </div>
                        <div class="form-group">
                            <label for="editProductName">Tên sản phẩm</label>
                            <input type="text" class="form-control" id="editProductName">
                        </div>
                        <div class="form-group">
                            <label for="editProductPrice">Giá sản phẩm</label>
                            <input type="text" class="form-control" id="editProductPrice">
                        </div>

                        <div class="form-group">
                            <label for="editProductBrand">Hãng sản phẩm</label>
                            <input type="text" class="form-control" id="editProductBrand">
                        </div>
                    </form>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="updateProduct()">OK</button>

                </div>
            </div>
        </div>

    </div>


    <!-- Delete Product Modal -->
    <div class="modal fade" id="deleteProductModal" tabindex="-1" role="dialog"
        aria-labelledby="deleteProductModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteProductModalLabel">Xác nhận xóa sản phẩm</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Bạn có chắc chắn muốn xóa sản phẩm này?</p>
                    <input type="hidden" id="deleteProductId">

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="deleteProduct()">OK</button>
                </div>
            </div>
        </div>
    </div>
    <script>
        function openDetailModal(id, name, price, brand, imagePaths) {
            // Cập nhật thông tin chi tiết sản phẩm trong modal
            if (event.target.classList.contains('btn-primary') || event.target.classList.contains('btn-danger')) {
                // Nếu là nút Edit hoặc Delete, không mở modal chi tiết
                return;
            }
            document.getElementById('detailProductImage').src = "/uploads/" + imagePaths[0];
            document.getElementById('detailProductName').value = name;
            document.getElementById('detailProductPrice').value = price + "$";
            document.getElementById('detailProductBrand').value = brand;
            document.getElementById('detailProductId').value = id;
            // Log để kiểm tra giá trị của id trước khi gọi hàm loadComments
            console.log('ProductId before calling loadComments:', id);

            // Gọi hàm để load danh sách comment
            loadComments(id); // Truyền productId vào hàm loadComments

            // Log để kiểm tra giá trị của id sau khi gọi hàm loadComments
            console.log('ProductId after calling loadComments:', id);
            $('#detailProductModal').modal('show');
        }
        document.addEventListener("DOMContentLoaded", function () {
            // Lắng nghe sự kiện click trên từng dòng của bảng
            const tableRows = document.querySelectorAll('.table tbody tr');
            tableRows.forEach(row => {
                row.addEventListener('click', function () {
                    const productId = this.dataset.productId;
                    const productName = this.dataset.productName;
                    const productPrice = this.dataset.productPrice;
                    const productBrand = this.dataset.productBrand;
                    const productImagePaths = JSON.parse(this.dataset.productImagePaths);

                    // Gọi hàm mở Modal chi tiết sản phẩm
                    openDetailModal(productId, productName, productPrice, productBrand, productImagePaths);
                });
            });
        });
        function openEditModal(id, name, price, brand, imagePaths) {
            const imageElement = document.getElementById('editProductImagePreview');

            // Chuyển đổi chuỗi JSON thành giá trị JavaScript
            const imagePathArray = JSON.parse(imagePaths);

            // Lấy đường dẫn từ mảng
            const imagePath = Array.isArray(imagePathArray) ? imagePathArray[0] : imagePathArray;

            imageElement.src = `/uploads/${imagePath}`;
            console.log('imagePath:', imagePath);

            document.getElementById('editProductName').value = name;
            document.getElementById('editProductPrice').value = price;
            document.getElementById('editProductBrand').value = brand;

            // Lưu ID của sản phẩm vào một trường ẩn để sử dụng khi nhấn OK
            document.getElementById('editProductId').value = id;
        }
        //Đọc file hình ảnh hiển thị luôn
        function previewImage() {
            const imageInput = document.getElementById('editProductImage');
            const imagePreview = document.getElementById('editProductImagePreview');

            const file = imageInput.files[0];

            if (file) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                };

                reader.readAsDataURL(file);
            }
        }




        function updateProduct() {
            const editModal = document.getElementById('editProductModal');
            const id = editModal.querySelector('#editProductId').value;
            const name = editModal.querySelector('#editProductName').value;
            const price = editModal.querySelector('#editProductPrice').value;
            const brand = editModal.querySelector('#editProductBrand').value;
            const imageInput = editModal.querySelector('#editProductImage');
            const image = imageInput.files[0]; // Lấy file từ input

            const formData = new FormData(); // Tạo đối tượng FormData để gửi dữ liệu form

            formData.append('name', name);
            formData.append('price', price);
            formData.append('brand', brand);
            formData.append('image', image);

            // Gửi request để cập nhật dữ liệu trong MongoDB
            fetch(`/product/${id}`, {
                method: 'PUT',
                body: formData,
            })
                .then(response => response.json())
                .then(data => {
                    // Xử lý dữ liệu sau khi cập nhật thành công
                    console.log('Update successful:', data);

                    // Nếu bạn vẫn muốn sử dụng modal với jQuery
                    $(editModal).modal('hide');

                    window.location.reload();

                })
                .catch(error => {
                    console.error('Update failed:', error);
                    console.log('Response:', error.response);
                });
        }


        // Hàm mở modal xác nhận xóa
        function openDeleteModal(productId) {
            // Đặt giá trị ID sản phẩm vào trường ẩn của modal
            document.getElementById('deleteProductId').value = productId;

            // Hiển thị modal xác nhận xóa
            $('#deleteProductModal').modal('show');
        }

        // Hàm xóa sản phẩm
        function deleteProduct() {
            const productId = document.getElementById('deleteProductId').value;

            // Gửi yêu cầu xóa đến máy chủ
            fetch(`/product/${productId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then(response => response.json())
                .then(data => {
                    // Xử lý dữ liệu sau khi xóa thành công (ví dụ: cập nhật giao diện, hiển thị thông báo)

                    console.log('Delete successful:', data);

                    // Đóng modal sau khi xóa thành công
                    $('#deleteProductModal').modal('hide');
                    window.location.reload();
                })
                .catch(error => {
                    console.error('Delete failed:', error);


                });
        }

        document.addEventListener("DOMContentLoaded", function () {
            const brandSearchInput = document.getElementById('timkiem');
            const tableRows = document.querySelectorAll('.table tbody tr');

            brandSearchInput.addEventListener('input', function () {
                const searchText = brandSearchInput.value.trim().toLowerCase();

                tableRows.forEach(row => {
                    const brand = row.dataset.productBrand.toLowerCase();
                    const isVisible = brand.includes(searchText);

                    row.style.display = isVisible ? 'table-row' : 'none';
                });
            });
        });
        function saveComment() {
            // Lấy thông tin từ các ô input
            const userName = document.getElementById('user').value;
            const userComment = document.getElementById('comment').value;

            // Kiểm tra xem đã nhập đủ thông tin chưa
            if (!userName || !userComment) {
                alert('Vui lòng nhập tên và bình luận.');
                return;
            }

            // Lấy ID của sản phẩm từ modal
            const productId = document.getElementById('detailProductId').value;

            // Gửi request để lưu đánh giá vào sản phẩm
            fetch(`/product/comment/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ user: userName, comment: userComment }),
            })
                .then(response => response.json())
                .then(data => {
                    // Cập nhật giao diện để hiển thị đánh giá mới
                    displayComment(data.comments);

                    // Xóa nội dung trong ô input
                    document.getElementById('user').value = '';
                    document.getElementById('comment').value = '';
                })
                .catch(error => {
                    console.error('Save comment failed:', error);
                });
        }

        function displayComment(comments, productId) {
            const commentList = document.getElementById(`commentList`);

            // Hiển thị các đánh giá mới
            comments.forEach(comment => {
                const listItem = document.createElement('li');
                listItem.textContent = `${comment.user}: ${comment.comment}`;
                commentList.appendChild(listItem);
            });
        }
        // Hàm để load và hiển thị comment
        function loadComments(productId) {
            console.log('ProductId before calling loadComments:', productId);
            fetch(`/product/comments/${productId}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Loading comments for productId:', productId);
                    console.log('Data from server:', data);
                    // Hiển thị danh sách comment
                    displayComment(data.comments, productId);
                    console.log('ProductId after calling loadComments:', productId);
                })
                .catch(error => {
                    console.error('Load comments failed:', error);
                });
        }


    </script>

</body>

</html>